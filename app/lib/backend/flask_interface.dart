import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:app/models/event.dart';

String apiUrl = 'http://172.31.151.109:5000';

Future<List<Event>> findEvents() async {
  String endpoint = '/tickets';
  var response = await http.Client().get(Uri.parse('$apiUrl$endpoint'));

  if (response.statusCode == 200) {
    List<dynamic> json = jsonDecode(response.body);

    List<Event> events = json
        .map((e) => Event(
              name: e['name'],
              address: e['location'],
              date: DateTime.parse(e['eventDate']),
              url: e['eventURL'],
              imageUrl: e['imagelist'],
              latitude: double.parse(e['lat']),
              longitude: double.parse(e['long']),
            ))
        .toList();

    return events;
  } else {
    throw Exception('Error, code ${response.statusCode}');
  }
}

Future<List<LatLng>> getRoutes() async {
  List<LatLng> dummyData = [
    (37.77921, -122.39007),
    (37.77893, -122.39042),
    (37.77883, -122.39055),
    (37.77864, -122.39077),
    (37.77853, -122.39092),
    (37.77847, -122.39099),
    (37.77828, -122.39124),
    (37.77821, -122.39132),
    (37.77804, -122.39154),
    (37.77806, -122.39157),
    (37.77812, -122.39164),
    (37.77811, -122.39165),
    (37.77816, -122.3917),
    (37.77819, -122.39174),
    (37.77823, -122.39178),
    (37.7783, -122.39186),
    (37.77832, -122.39188),
    (37.77831, -122.3919),
    (37.77839, -122.39199),
    (37.77848, -122.39211),
    (37.7786, -122.39227),
    (37.77865, -122.39231),
    (37.7787, -122.39237),
    (37.77886, -122.39258),
    (37.77886, -122.39257),
    (37.77888, -122.39259),
    (37.779, -122.39275),
    (37.77902, -122.39277),
    (37.77913, -122.39292),
    (37.77923, -122.39304),
    (37.77929, -122.39313),
    (37.77932, -122.39315),
    (37.77943, -122.3933),
    (37.77943, -122.39333),
    (37.77937, -122.39341),
    (37.7795, -122.39359),
    (37.77954, -122.39364),
    (37.77968, -122.39381),
    (37.77981, -122.39398),
    (37.77991, -122.3941),
    (37.77998, -122.39418),
    (37.78003, -122.39424),
    (37.78011, -122.39432),
    (37.78035, -122.39464),
    (37.7806, -122.39494),
    (37.78072, -122.39508),
    (37.78081, -122.3952),
    (37.78107, -122.39552),
    (37.78108, -122.39553),
    (37.78134, -122.39587),
    (37.78161, -122.39622),
    (37.78176, -122.39641),
    (37.78214, -122.39687),
    (37.78225, -122.39702),
    (37.78231, -122.39708),
    (37.78238, -122.39717),
    (37.78241, -122.39722),
    (37.78249, -122.39733),
    (37.78255, -122.39742),
    (37.78264, -122.39753),
    (37.78271, -122.39762),
    (37.78291, -122.39787),
    (37.783, -122.39798),
    (37.78345, -122.39853),
    (37.78349, -122.39859),
    (37.78362, -122.39875),
    (37.78381, -122.39898),
    (37.7839, -122.39908),
    (37.78402, -122.39924),
    (37.78406, -122.39929),
    (37.78422, -122.39949),
    (37.7844, -122.39971),
    (37.78441, -122.39973),
    (37.78458, -122.39995),
    (37.7846, -122.39998),
    (37.7848, -122.40023),
    (37.78491, -122.40037),
    (37.78493, -122.40039),
    (37.78502, -122.4005),
    (37.7851, -122.4006),
    (37.78522, -122.40074),
    (37.78536, -122.40092),
    (37.78547, -122.40104),
    (37.7856, -122.40121),
    (37.7857, -122.40135),
    (37.7858, -122.40147),
    (37.78583, -122.40151),
    (37.78621, -122.402),
    (37.78627, -122.40208),
    (37.78653, -122.40241),
    (37.78657, -122.40246),
    (37.78669, -122.40261),
    (37.78703, -122.40303),
    (37.78725, -122.40332),
    (37.78729, -122.40337),
    (37.78731, -122.40339),
    (37.78732, -122.4034),
    (37.78734, -122.40341),
    (37.78736, -122.40342),
    (37.78738, -122.40343),
    (37.7874, -122.40343),
    (37.78742, -122.40343),
    (37.78765, -122.40346),
    (37.78775, -122.40347),
    (37.78798, -122.40351),
    (37.78815, -122.40355),
    (37.78817, -122.40355),
    (37.78823, -122.40356),
    (37.78844, -122.4036),
    (37.78891, -122.40369),
    (37.78933, -122.40377),
    (37.78937, -122.40379),
    (37.78939, -122.4038),
    (37.78976, -122.40387),
    (37.78985, -122.40389),
    (37.78979, -122.40425),
    (37.78974, -122.4046),
    (37.78973, -122.40474),
    (37.78963, -122.40544),
    (37.78961, -122.4056),
    (37.78953, -122.40623),
    (37.78951, -122.40643),
    (37.78947, -122.4067),
    (37.78945, -122.40688),
    (37.78943, -122.40698),
    (37.78961, -122.40702),
    (37.78966, -122.40704),
    (37.78975, -122.40706),
    (37.7899, -122.40709),
    (37.79011, -122.40714),
    (37.79022, -122.40717),
    (37.79029, -122.4071),
    (37.79029, -122.40709),
    (37.7903, -122.40709),
    (37.79031, -122.40709),
    (37.79031, -122.4071),
    (37.79031, -122.40711),
    (37.79031, -122.40712),
    (37.79031, -122.40717),
    (37.79037, -122.40718),
    (37.79053, -122.40721),
    (37.7907, -122.40724),
    (37.79106, -122.40732),
    (37.79123, -122.40735),
    (37.79124, -122.40735),
    (37.7913, -122.40737),
    (37.79146, -122.4074),
    (37.79147, -122.4074),
    (37.79164, -122.40744),
    (37.79189, -122.40749),
    (37.79197, -122.4075),
    (37.79198, -122.40751),
    (37.79214, -122.40754),
    (37.79219, -122.40755),
    (37.79226, -122.40756),
    (37.79244, -122.40759),
    (37.79261, -122.40763),
    (37.79262, -122.40763),
    (37.79264, -122.40763),
    (37.79265, -122.40758),
    (37.79265, -122.40757),
    (37.79266, -122.40757),
    (37.79266, -122.40756),
    (37.79267, -122.40756),
    (37.79277, -122.40758),
    (37.79277, -122.40759),
    (37.79278, -122.40759),
    (37.79278, -122.4076),
    (37.79278, -122.40761),
    (37.79278, -122.40767),
    (37.79291, -122.40769),
    (37.79296, -122.4077),
    (37.79301, -122.40771),
    (37.79312, -122.40773),
    (37.79319, -122.40774),
    (37.79341, -122.40778),
    (37.7935, -122.40779),
    (37.7936, -122.40781),
    (37.7938, -122.40785),
    (37.79382, -122.40786),
    (37.79407, -122.40791),
    (37.79452, -122.408),
    (37.79477, -122.40805),
    (37.79479, -122.40805),
    (37.7948, -122.40806),
    (37.79485, -122.40807),
    (37.79498, -122.40809),
    (37.7953, -122.40816),
    (37.79549, -122.4082),
    (37.79584, -122.40827),
    (37.79621, -122.40834),
    (37.79623, -122.40834),
    (37.79635, -122.40836),
    (37.79653, -122.4084),
    (37.79673, -122.40844),
    (37.79707, -122.40851),
    (37.79733, -122.40856),
    (37.79764, -122.40863),
    (37.79809, -122.40873),
    (37.79858, -122.40883),
    (37.79905, -122.40892),
    (37.79912, -122.40893),
    (37.79912, -122.40894),
    (37.79913, -122.40887),
    (37.79912, -122.40887),
    (37.79913, -122.40887),
    (37.79921, -122.40889),
    (37.79922, -122.40889),
    (37.79925, -122.4089),
    (37.79927, -122.4089),
    (37.79928, -122.4089),
    (37.79926, -122.40884),
    (37.79943, -122.40878),
    (37.79947, -122.40877),
    (37.79949, -122.40879),
    (37.79949, -122.40873),
    (37.79952, -122.40844),
    (37.79954, -122.40825),
    (37.79955, -122.40814),
    (37.79956, -122.40803),
    (37.79957, -122.40796),
    (37.79958, -122.40786),
    (37.7996, -122.40772),
    (37.79961, -122.40768),
    (37.79963, -122.40748),
    (37.79965, -122.40732),
    (37.79968, -122.40709),
    (37.79969, -122.40702),
    (37.79971, -122.40682),
    (37.79973, -122.40665),
    (37.79974, -122.40661),
    (37.79989, -122.40663),
    (37.80004, -122.40666),
    (37.80057, -122.40677),
    (37.80068, -122.40679),
    (37.80082, -122.40681),
    (37.8009, -122.40682),
    (37.8009, -122.40683),
    (37.80144, -122.40693),
    (37.80149, -122.40694),
    (37.80161, -122.40696),
    (37.80162, -122.40694),
    (37.80163, -122.40681),
    (37.80166, -122.4066),
    (37.80166, -122.40656),
    (37.80167, -122.40651),
    (37.80169, -122.40638),
    (37.80169, -122.4063),
    (37.8017, -122.4063),
    (37.8017, -122.40626),
    (37.80171, -122.40618),
    (37.80171, -122.40615),
    (37.8017, -122.40615),
    (37.80171, -122.40608),
    (37.80171, -122.40606),
    (37.80172, -122.40598),
    (37.80172, -122.40596),
    (37.80173, -122.40591),
    (37.80173, -122.40588),
    (37.80174, -122.40583),
    (37.80175, -122.40579),
    (37.80175, -122.40572),
    (37.80176, -122.40569),
    (37.80177, -122.40567),
    (37.80177, -122.40566),
    (37.80178, -122.40565),
    (37.80179, -122.40564),
    (37.8018, -122.40564),
    (37.80186, -122.40566),
    (37.80187, -122.40568),
    (37.80187, -122.40573),
    (37.80188, -122.40574),
    (37.80189, -122.40575),
    (37.8019, -122.40576),
    (37.80194, -122.40577),
    (37.80197, -122.4058),
    (37.80199, -122.40583),
    (37.80205, -122.4059),
    (37.8021, -122.40596),
    (37.80212, -122.40594),
    (37.80213, -122.40592),
    (37.80213, -122.4059),
    (37.80213, -122.40588),
    (37.80213, -122.40585),
    (37.80214, -122.40584),
    (37.80218, -122.4059),
    (37.80221, -122.40594),
    (37.80223, -122.40586),
    (37.80225, -122.40586),
    (37.80225, -122.4058),
    (37.80228, -122.40574),
    (37.80229, -122.4057),
    (37.80233, -122.40569),
    (37.80237, -122.40568),
    (37.80241, -122.40569),
    (37.80244, -122.40571)
  ].map((e) => LatLng(e.$1, e.$2)).toList();

  return dummyData;

  String endpoint = '/';
  var response = await http.Client().get(Uri.parse('$apiUrl$endpoint'));

  if (response.statusCode == 200) {
    List<dynamic> json = jsonDecode(response.body);
  } else {
    throw Exception('Error, code ${response.statusCode}');
  }
}
